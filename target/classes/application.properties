spring.application.name=userservice
server.port=${USER_SERVICE_SERVER_PORT}
spring.main.banner-mode=off

spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=${USER_SERVICE_DB_URL}
spring.datasource.username=${USER_SERVICE_DB_USER}
spring.datasource.password=${USER_SERVICE_DB_PASSWORD}
jwt.service.secret=${JWT_SERVICE_SECRET}

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
logging.level.org.springframework.security.*=TRACE
logging.level.org.springframework.web.*=TRACE
spring.jpa.properties.hibernate.format_sql=true

enable.email.service=${ENABLE_EMAIL_SERVICE}

# OAuth2
#spring.security.user.name: user
#spring.security.user.password: password
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id: oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret: {noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods: client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[0]: authorization_code
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[1]: refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris: http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris: http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[0]: openid
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[1] = profile
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent: true